pipeline {

    agent {
        docker {
            image 'wbarmis/sutoremon_tv:1.0.0'
            args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
            reuseNode true
        }
    }

    stages {

        stage("Backend Tests & Build Image") {
            steps {
                echo 'Running Backend Tests & Building Dockerfile'
                dir ('back') {
                    sh 'docker build --no-cache -t wbarmis/sutoremon_tv:backend .'
                }
            }
        }

        stage("Build Frontend Image") {
            steps {
                echo 'Building Frontend Dockerfile'
                dir ('front') {
                    sh 'docker build --no-cache -t wbarmis/sutoremon_tv:frontend .'
                }
            }
        }

        stage("Build player Image") {
            steps {
                echo 'Building Player Dockerfile'
                dir ('stream') {
                    sh 'docker build --no-cache -t wbarmis/sutoremon_tv:stream .'
                }
            }
        }

        stage("Login To Docker Hub") {
            steps {
                echo 'Login to Docker Registry'
                withCredentials([string(credentialsId: 'DOCKER_HUB_PASSWORD', variable: 'PASSWORD')]) {
                    sh 'docker login -u wbarmis -p $PASSWORD'
                }
            }
        }

        stage("Push To Docker Hub") {
            steps {
                echo 'Push all images to Docker Registry'
                sh 'docker push wbarmis/sutoremon_tv:frontend'
                sh 'docker push wbarmis/sutoremon_tv:backend'
                sh 'docker push wbarmis/sutoremon_tv:stream'
            }
        }

        stage("Deployment To Kubernetes") {
            when {
                expression {
                    BRANCH_NAME == 'master' || BRANCH_NAME == 'main' 
                }
            }
            steps {
                echo 'Deploy to Kubernetes'
                // gcloud container clusters create yep-cluster --num-nodes=1 --zone=europe-west1-b
                sh '''
                    gcloud auth activate-service-account --key-file=./end-year-project-2525-b08debf0e3d6.json --project=end-year-project-2525
                    gcloud auth configure-docker --quiet
                    gcloud components install kubectl
                    gcloud container clusters get-credentials yep-cluster --zone=europe-west1-b
                '''
                dir ('deployment/kubernetes/prod') {
                    sh'kubectl apply -f frontend.yaml'
                    sh'kubectl apply -f backend.yaml'
                    sh'kubectl apply -f stream.yaml'
                    sh '''
                        kubectl set image deployment frontend-deployment-prod frontend-prod=wbarmis/sutoremon_tv:frontend
                        kubectl set image deployment backend-deployment-prod backend-prod=wbarmis/sutoremon_tv:backend
                        kubectl set image deployment stream-deployment-prod stream-prod=wbarmis/sutoremon_tv:stream
                    '''
                }
            }
        }

        stage("Clean-up") {
            steps {
                echo 'Clean all environments...'
                sh 'docker images'
                sh 'docker system prune -a -f'
            }
        }
    }
}